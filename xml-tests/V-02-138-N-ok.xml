<sequence_node size='2'>
  <function_definition_node name='f' qualifier='private' type=''>
    <arguments>
      <sequence_node size='1'>
        <variable_declaration_node name='a' qualifier='public' type='integer'>
        </variable_declaration_node>
      </sequence_node>
    </arguments>
    <block>
      <block_node>
        <declarations>
        </declarations>
        <instructions>
          <sequence_node size='1'>
            <if_else_node>
              <condition>
                <rvalue_node>
                  <variable_node> a</variable_node>
                </rvalue_node>
              </condition>
              <then>
                <return_node>
                  <sequence_node size='3'>
                    <integer_node>5</integer_node>
                    <double_node>61</double_node>
                    <string_node>string1</string_node>
                  </sequence_node>
                </return_node>
              </then>
              <else>
                <return_node>
                  <sequence_node size='3'>
                    <integer_node>6</integer_node>
                    <integer_node>62</integer_node>
                    <string_node>string2</string_node>
                  </sequence_node>
                </return_node>
              </else>
            </if_else_node>
          </sequence_node>
        </instructions>
      </block_node>
    </block>
  </function_definition_node>
  <function_definition_node name='og' qualifier='public' type='integer'>
    <arguments>
    </arguments>
    <block>
      <block_node>
        <declarations>
          <sequence_node size='1'>
            <variable_declaration_node name='a' qualifier='private' type=''>
              <value>
                <tuple_node>
                  <sequence_node size='1'>
                    <function_call_node name='f'>
                      <arguments>
                        <sequence_node size='1'>
                          <integer_node>0</integer_node>
                        </sequence_node>
                      </arguments>
                    </function_call_node>
                  </sequence_node>
                </tuple_node>
              </value>
            <variable_declaration_node name='b' qualifier='private' type=''>
              <value>
                <tuple_node>
                  <sequence_node size='1'>
                    <function_call_node name='f'>
                      <arguments>
                        <sequence_node size='1'>
                          <integer_node>0</integer_node>
                        </sequence_node>
                      </arguments>
                    </function_call_node>
                  </sequence_node>
                </tuple_node>
              </value>
            </variable_declaration_node>
          </sequence_node>
        </declarations>
        <instructions>
          <sequence_node size='4'>
            <write_node>
              <sequence_node size='1'>
                <rvalue_node>
                  <variable_node> a</variable_node>
                </rvalue_node>
              </sequence_node>
            </write_node>
            <write_node>
              <sequence_node size='1'>
                <rvalue_node>
                  <variable_node> b</variable_node>
                </rvalue_node>
              </sequence_node>
            </write_node>
            <write_node>
              <sequence_node size='1'>
                <rvalue_node>
                  <variable_node> c</variable_node>
                </rvalue_node>
              </sequence_node>
            </write_node>
            <return_node>
              <sequence_node size='1'>
                <integer_node>0</integer_node>
              </sequence_node>
            </return_node>
          </sequence_node>
        </instructions>
      </block_node>
    </block>
  </function_definition_node>
</sequence_node>
